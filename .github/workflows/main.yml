name: Kali-RDP-Demo

on:
  workflow_dispatch:

jobs:
  kali-rdp:
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
      - name: Checkout (optional)
        uses: actions/checkout@v4

      - name: Install Docker CLI & start Docker (if not present)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo usermod -aG docker $USER || true
          docker --version

      - name: Pull Kali image
        run: |
          docker pull kalilinux/kali-rolling:latest

      - name: Run Kali container with systemd (privileged)
        id: start_container
        run: |
          CONTAINER_NAME="kali-rdp-gh-${{ github.run_id }}"
          # create & start container with systemd so we can use apt/systemctl inside
          docker run -d --name "$CONTAINER_NAME" \
            --privileged \
            --tmpfs /run --tmpfs /run/lock \
            -v /sys/fs/cgroup:/sys/fs/cgroup:ro \
            kalilinux/kali-rolling:latest /sbin/init
          echo "container=$CONTAINER_NAME" >> $GITHUB_OUTPUT

      - name: Wait for container to be ready
        run: |
          CONTAINER_NAME="${{ steps.start_container.outputs.container }}"
          for i in {1..20}; do
            if docker exec "$CONTAINER_NAME" systemctl is-system-running --quiet; then
              echo "systemd running in container"
              break
            fi
            echo "waiting for container systemd... ($i)"
            sleep 3
          done

      - name: Prepare Kali inside container (install xrdp, create user)
        run: |
          CONTAINER="${{ steps.start_container.outputs.container }}"
          docker exec -u root $CONTAINER bash -lc "export DEBIAN_FRONTEND=noninteractive
            apt-get update -y && apt-get install -y xrdp sudo passwd
            # Create user RDP with random strong password
            PASS=\$(tr -dc 'A-Za-z0-9!@#%^&*()_+-=' </dev/urandom | head -c 20)
            useradd -m -s /bin/bash RDP || true
            echo \"RDP:\$PASS\" | chpasswd
            usermod -aG sudo RDP
            # enable and start xrdp
            systemctl enable xrdp
            systemctl restart xrdp
            # print credentials to file for action logs (masked via output secret recommendation)
            echo \"RDP_USER=RDP\" >> /tmp/rdp_creds
            echo \"RDP_PASS=\$PASS\" >> /tmp/rdp_creds
            chmod 600 /tmp/rdp_creds
          "
          docker cp $CONTAINER:/tmp/rdp_creds rdp_creds || true
          echo "RDP_CREDS<<EOF" >> $GITHUB_ENV
          cat rdp_creds >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          rm -f rdp_creds

      - name: Show how to connect (container IP)
        run: |
          CONTAINER="${{ steps.start_container.outputs.container }}"
          # Get container IP on docker network
          IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CONTAINER)
          echo "KALI_CONTAINER_IP=$IP" >> $GITHUB_ENV
          echo "To connect (from runner network): $IP:3389"
          echo "RDP user: $RDP_USER (password in RDP_CREDS env)"

      - name: Keep workflow alive for manual testing (short)
        run: |
          echo "Container: ${{ steps.start_container.outputs.container }}"
          echo "Kali IP: $KALI_CONTAINER_IP"
          echo "RDP credentials are in RDP_CREDS environment variable."
          # keep alive for a limited time (example: 30 minutes) â€” change as needed
          for i in {1..30}; do
            echo "alive: $i/30 - $(date)"
            sleep 60
          done
